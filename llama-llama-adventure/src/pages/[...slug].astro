---
import { getCollection } from 'astro:content'
import { Container, Content, Heading, Stack } from 'llama-llama-ui'
import 'llama-llama-ui/src/content/content.css'
import App from '~/app.astro'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

const { post } = Astro.props
const { Content: Post } = await post.render()
---

<App title={post.data.title} padding="lg">
  <Container data-post={post.slug} size="sm">
    <Content class={post.data.type}>
      <h1>{post.data.title}</h1>
      <Post />
    </Content>
  </Container>
</App>

<style is:global>
  lam-content .contains-task-list {
    padding: 0;
    list-style: none;
  }

  /* Notes */
  .note {
    --font-family-heading: var(--font-family-cursive);
    font-family: var(--font-family-cursive);
  }

  .note :is(p, li) {
    --content-font-size: var(--text-xl-font-size);
    --content-line-height: var(--text-xl-line-height);
    --content-margin-before: var(--text-xl-margin-before);
    --content-margin-after: var(--text-xl-margin-after);
  }

  /* Links page */
  [data-post='links'] p {
    margin: 0;
  }

  [data-post='links'] p:has(a) {
    --content-margin-before: 0;
    --content-margin-after: 0;
  }

  [data-post='links'] a {
    position: relative;
    padding-block: var(--spacing-xs);
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--spacing-xs);
    color: hsl(var(--color-text-primary));
    font-weight: var(--font-weight-normal);
  }

  [data-post='links'] p:not(:has(a)) {
    --content-font-size: var(--text-md-font-size);
    --content-line-height: var(--text-md-line-height);
    --content-margin-before: var(--text-md-margin-before);
    --content-margin-after: var(--text-md-margin-after);
    margin-block-start: calc(-1 * var(--spacing-2xs));
    margin-block-end: var(--spacing-sm);
    color: hsl(var(--color-text-secondary));
  }

  [data-post='links'] a:hover {
    color: var(--color-brand-700);
    text-decoration: none;
  }

  [data-post='links'] a::after {
    display: block;
    content: '';
    inline-size: var(--size-sm);
    block-size: var(--size-sm);
    flex-shrink: 0;
    opacity: 0.6;
    transition: background-image 150ms ease, opacity 150ms, translate 300ms ease;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3e%3cpath d='M12.7071 4.29289C12.3166 3.90237 11.6834 3.90237 11.2929 4.29289C10.9024 4.68342 10.9024 5.31658 11.2929 5.70711L16.5858 11H5C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13H16.5858L11.2929 18.2929C10.9024 18.6834 10.9024 19.3166 11.2929 19.7071C11.6834 20.0976 12.3166 20.0976 12.7071 19.7071L19.7071 12.7071C19.9016 12.5126 19.9992 12.2579 20 12.003L20 12L20 11.997C19.9996 11.8625 19.9727 11.7343 19.9241 11.6172C19.8764 11.502 19.8063 11.3938 19.7136 11.2995C19.7112 11.297 19.7089 11.2946 19.7065 11.2922L12.7071 4.29289Z' fill='%234d606a' %3e%3c/path%3e%3c/svg%3e");
  }

  [data-post='links'] a:hover::after {
    opacity: 1;
    translate: var(--spacing-4xs);
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3e%3cpath d='M12.7071 4.29289C12.3166 3.90237 11.6834 3.90237 11.2929 4.29289C10.9024 4.68342 10.9024 5.31658 11.2929 5.70711L16.5858 11H5C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13H16.5858L11.2929 18.2929C10.9024 18.6834 10.9024 19.3166 11.2929 19.7071C11.6834 20.0976 12.3166 20.0976 12.7071 19.7071L19.7071 12.7071C19.9016 12.5126 19.9992 12.2579 20 12.003L20 12L20 11.997C19.9996 11.8625 19.9727 11.7343 19.9241 11.6172C19.8764 11.502 19.8063 11.3938 19.7136 11.2995C19.7112 11.297 19.7089 11.2946 19.7065 11.2922L12.7071 4.29289Z' fill='%2358c42e' %3e%3c/path%3e%3c/svg%3e");
  }

  [data-post='links'] p + p > a::before {
    display: block;
    content: '';
    block-size: var(--border-size-sm);
    position: absolute;
    inset-inline: 0;
    inset-block-start: 0;
    background-color: hsl(var(--color-border));
  }
</style>
