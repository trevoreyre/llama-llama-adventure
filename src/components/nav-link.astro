---
import type { HTMLAttributes } from 'astro/types'
import { getEntry } from 'astro:content'

type Props = HTMLAttributes<'a'>

const { href, ...props } = Astro.props
const { pathname } = Astro.url

const regExpStartEndSlash = /^\/|\/$/g
const _href = (href as string).replace(regExpStartEndSlash, '')
const _pathname = pathname.replace(regExpStartEndSlash, '')
const basePaths = ['posts', 'notes', 'links']

let active = false
if (pathname === '/' || basePaths.includes(_pathname)) {
  active = href === pathname || _href === _pathname
} else {
  const post = await getEntry('posts', _pathname)
  const postType = post?.data?.type
  active = (_href === 'posts' && postType === 'post') || (_href === 'notes' && postType === 'note')
}
---

<a href={href} data-active={active} {...props}>
  <slot />
</a>

<style>
  a {
    box-sizing: border-box;
    position: relative;
    display: block;
    inline-size: 100%;
    color: hsl(var(--color-text-primary));
    text-decoration: none;
    padding-block: var(--spacing-xs);
    padding-inline: var(--spacing-sm);
    font-size: var(--text-xs-font-size);
    font-weight: var(--font-weight-bold);
    line-height: var(--line-height-none);
    text-transform: uppercase;
    letter-spacing: var(--letter-spacing-lg);
  }

  a:hover {
    color: var(--color-brand-700);
  }

  a[data-active] {
    color: var(--color-brand-700);
  }

  a[data-active]::after {
    content: '';
    display: block;
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    inline-size: var(--border-size-lg);
    block-size: 100%;
    background-color: var(--color-brand-500);
    z-index: var(--z-index-forward);
  }

  @media screen and (min-width: 600px) {
    a {
      border-radius: var(--border-radius-md);
      inline-size: auto;
      padding-inline: var(--spacing-3xs);
    }

    a[data-active] {
      color: hsl(var(--color-text-primary));
    }

    a[data-active]::after {
      inset-block-start: auto;
      inset-block-end: 0;
      inline-size: 100%;
      block-size: var(--border-size-lg);
    }
  }
</style>
